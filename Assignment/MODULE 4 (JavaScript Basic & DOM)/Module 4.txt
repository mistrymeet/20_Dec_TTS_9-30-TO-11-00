(1) What is JavaScript?
Ans : 
     JavaScript is a scripting or programming language that allows you to implement complex features on web pages — every time a web page does more than just sit there and display static information for you to look at — displaying timely content updates, interactive maps, animated 2D/3D graphics, scrolling video jukeboxes, etc. 

(2) What is the use of isNaN function?
Ans : 
     In Javascript NaN stands for "Not-a-Number". Hence here, isNaN() is a method in Javascript used to check whether a value is a number or not.
     The method isNaN in JavaScript returns true if the given value is Not-a-Number, else it returns false.

     ex:
     console.log(isNaN(NaN))
     console.log(isNaN(0))
     console.log(isNaN(0/0))

(3) What is negative Infinity
Ans :
     The negative infinity in JavaScript is a constant value that is used to represent a value that is the lowest available. This means that no other number is lesser than this value. It can be generated using a self-made function or by an arithmetic operation. 

(4) Which company developed JavaScript?
Ans :
     JavaScript was invented by Brendan Eich in 1995. It was developed for Netscape 2, and became the ECMA-262 standard in 1997. After Netscape handed JavaScript over to ECMA, the Mozilla foundation continued to develop JavaScript for the Firefox browser.

(5) What are undeclared and undefined variables? 
Ans :
     Undefined variable means a variable has been declared but does not have a value.
     
     Undeclared variable means that the variable does not exist in the program at all.

(6) Write the code for adding new elements dynamically?
Ans : 
     The createElement() method in JavaScript can be used to create new items dynamically.
     ex:
         document.createElement("<tagName>");  
        // tagName like div, ul, button, etc.
        // Where <tagName> can be any HTML 

        // newDiv element has been created
        For Eg: let newDiv = document.createElement("div");

(7)  What is the difference between ViewState and SessionState?
Ans :
     Session State contains information that is pertaining to a specific session (by a particular client/browser/machine) with the server. It's a way to track what the user is doing on the site...

     View State on the other hand is information specific to particular web page. It is stored in a hidden field so that it isn't visible to the user. It is used to maintain the user's illusion that the page remembers what he did on it the last time - dont give him a clean page every time he posts back.

(8) What is === operator?
Ans : 
     The strict equality operator (===) checks whether its two operands are equal, returning a Boolean result. Unlike the equality operator, the strict equality operator always considers operands of different types to be different.

(9) How can the style/class of an element be changed? 
Ans :
     To change the styles of all elements with a specific class:

     Use the querySelectorAll() method to get a collection of the elements with the specific class.
     Use the forEach() method to iterate over the collection.
     On each iteration, use the style object to change the element's styles.

(10) How to read and write a file using JavaScript? 
Ans :
     file=fopen(getScriptPath(),0); The function fread() is used for reading the file content.
     str = fread(file,flength(file)) ; The function fwrite() is used to write the contents to the file.
     file = fopen("c:\MyFile.txt", 3);// opens the file for writing.    

(11) What are all the looping structures in JavaScript?
Ans :
     for - loops through a block of code a number of times
     for/in - loops through the properties of an object
     for/of - loops through the values of an iterable object
     while - loops through a block of code while a specified condition is true
     do/while - also loops through a block of code while a specified condition is true

(12) How can you convert the string of any base to an integer in JavaScript?
Ans :
     To convert a string to an integer parseInt(), Number(), and Unary operator(+) function is used in javascript. parseInt() function returns Nan( not a number) when the string doesn’t contain number. If a string with a number is sent, then only that number will be returned as the output. This function won't accept spaces. If any particular number with spaces is sent, then the part of the number that presents before space will be returned as the output.

(13)  What is the function of the delete operator? 
Ans :
     The delete operator removes a property from an object. If the property's value is an object and there are no more references to the object, the object held by that property is eventually released automatically.

     const Employee = {
     firstname: 'John',
    lastname: 'Doe'
     };

     console.log(Employee.firstname);
     // Expected output: "John"

     delete Employee.firstname;

     console.log(Employee.firstname);
     // Expected output: undefined

(14) What are all the types of Pop up boxes available in JavaScript? 
Ans :
     JavaScript has three kind of popup boxes: 
    (1) Alert box, 
    (2) Confirm box, 
    (3) Prompt box.

(15)  What is the use of Void (0)?
Ans :
     JavaScript void 0 means returning undefined (void) as a primitive value. You might come across the term “JavaScript:void(0)” while going through HTML documents. It is used to prevent any side effects caused while inserting an expression in a web page.

(16) How can a page be forced to load another page in JavaScript?
Ans : 
     We can use window.location property inside the script tag to forcefully load another page in Javascript. It is a reference to a Location object that is it represents the current location of the document. We can change the URL of a window by accessing it.

(17)  What are the disadvantages of using innerHTML in JavaScript?
Ans :
     Inner HTML is slow
     Inner HTML is slow because when we use the inner HTML property in the code it allows us to      change using the JavaScript language. It is very slow because as inner HTML already parses     the  content even we have to parse the content again so that’s why it takes time.

     Event handlers attached to any DOM element are preserved
     When we have used the event handlers then the event handlers are not automatically attached to the new elements created by innerHTML. To change that, we have to track the event handlers and manually attach them to a new element.
     It means that first, we have to fetch the element property through innerHTML, and then we     have  to attach them to a new element.

     Replacement is done everywhere
     When innerHTML property is used to modify, all the DOM nodes will have to be parsed and created again.

     It is not possible to append innerHTML
     In JavaScript, ‘+=’ is commonly used for appending. However, when using innerHTML to append to an HTML tag, the entire tag is re-parsed.

     Breaks the document
     InnerHTML does not provide proper validation, so any valid HTML code can be used. This has the potential to break the JavaScript document. Even broken HTML can be used, which can cause unexpected issues.

     Used for Cross-site Scripting
     The text and images or elements in the webpage can used by hackers or malicious users to change the text or data and show some different undesired or threatful content by the other HTML element tag. This leads to change of sensitive and confidential information.

